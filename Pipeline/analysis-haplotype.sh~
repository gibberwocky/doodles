#!/bin/bash
# IEKNGHER1ujm

# Have to run this as a script on cluster otherwise it indicates an error
qsub -q unlimitq -l mem=4G -l h_vmem=48G -pe parallel_smp 4 \
    -o ${DUMP}/logs -e ${DUMP}/logs ${PIPE}/haplotype.sh


# Set-up
module load bioinfo/bcftools
DUMP="/home/dwragg/work/Analysis"
PIPE="/home/dwragg/work/Pipeline"
PLINK="/usr/local/bioinfo/src/plink/plink-1.90-x86_64"
SITES=${DUMP}/vcfs/HARP-JFM-OTH
VCF=${SITES}/S2_hapJFMOTH.vcf.gz

# Merge data (haploids only)
#bcftools merge -m snps -O z \
#  ${SITES}/JFM_beagle.vcf.gz \
#  ${SITES}/OTH_beagle.vcf.gz \
#  -o ${VCF}
#tabix -fp vcf ${VCF}




# Input VCF file
FILE=${DUMP}/selection/ehh/JFM-OTH-tmp.vcf

CHRS=('NC_007070.3' 'NC_007071.3' 'NC_007072.3' 'NC_007073.3' \
  'NC_007074.3' 'NC_007075.3' 'NC_007076.3' 'NC_007077.3' 'NC_007078.3' \
  'NC_007079.3' 'NC_007080.3' 'NC_007081.3' 'NC_007082.3' 'NC_007083.3' \
  'NC_007084.3' 'NC_007085.3' 'NC_001566.1')

# Chromosomal loop
function join { local IFS="$1"; shift; echo "$*"; }

for CHR in ${CHRS[@]}
do

  # Extract chromosomes, exclude sites with uncalled genotype, drop header
  bcftools view -H -g ^het -g ^miss -O v --regions ${CHR} -o ${FILE} ${VCF}

  # Replace underscores in sample IDs
  sed -i '/^#CHROM/s/_/-/g' ${FILE}
  # Convert chromosome accessions to numbers
  ${PIPE}/accession-to-chr.sh -i ${FILE}

  # Extract header and save sample IDs
  bcftools view -h  -O v \
    -o ${DUMP}/selection/ehh/header.vcf \
    ${VCF}
  tail --l 1 ${DUMP}/selection/ehh/header.vcf \
    > ${DUMP}/selection/ehh/IDs
  rm ${DUMP}/selection/ehh/header.vcf

  # Number of samples
  POP="JFM"
  START=10
  N=30
  mkdir -p ${DUMP}/selection/ehh/${POP}
  HAPFILE=${DUMP}/selection/ehh/${POP}/${POP}-${CHR}.hap

  rm -f ${HAPFILE}
  touch ${HAPFILE}

  for((I=$((${START}));I<=$((${START}+${N}-1));I++));
  do 
    # Cut n paste
    cut -f${I} ${FILE} > ${DUMP}/selection/ehh/test.${I}
    cut -c 1 test.${I} > ${DUMP}/selection/ehh/test.${I}a
    readarray tmp < ${DUMP}/selection/ehh/test.${I}a
    # Append data
    echo ${tmp[@]} >> ${HAPFILE}
    # Clean up
    rm ${DUMP}/selection/ehh/test.${I}
    rm ${DUMP}/selection/ehh/test.${I}a
  done

  # Extract mapfile details
  # For genetic distacnce, Amel has ~ 28.7 kb per cM
  mkdir -p ${DUMP}/selection/ehh/CHR
  cut -f 1-3 ${FILE} | \
    awk '{ temp = $1":"$2"[Amel4-5]"; $3 = temp; print $1"\t"$3"\t"$2/28700"\t"$2 }' - \
    >  ${DUMP}/selection/ehh/CHR/${CHR}.map

  # CHR cleanup
  rm ${FILE}
  rm ${DUMP}/selection/IDs

done




# ============================================================================= 
# SelScan
# ============================================================================= 
# Apis mellifera = ~ 28.7 kb per cM

# selscan --xpehh --hap <pop1 haplotypes> --ref <pop2 haplotypes> \
#   --map <mapfile> --out <outfile>
# --hap <string>: Hapfile, 1 row per haplotype, 1 col per variant (0/1)
# --map <string>: Mapfile: <chr#> <locusID> <genetic pos> <physical pos>.
# --ref <string>: Hapfile. Reference population for XP-EHH calculations.  
# --out <string>: Basename for all output files.
# Additional optional parameters:
#	ehh-win (-w)	max-gap (-g)	gap-scale (-s)	max-extend (-x)
# Def	100000		200000		20000		1000000
# T1	10000		20000		2000		100000 
# T2	5000		10000		1000		50000

# To batch process on cluster
POP1="JFM"
POP2="OTH"
mkdir -p ${DUMP}/logs/selscan
for CHR in ${CHRS[@]}
do
  qsub -q unlimitq -l mem=4G -l h_vmem=48G -pe parallel_smp 4 \
    -o ${DUMP}/logs/selscan -e ${DUMP}/logs/selscan \
    ${PIPE}/selscan.sh -w 100000 -g 200000 -s 20000 -x 1000000 \
      -h ${DUMP}/selection/ehh/${POP1}/${POP1}-${CHR}.hap \
      -r ${DUMP}/selection/ehh/${POP2}/${POP2}-${CHR}.hap \
      -m ${DUMP}/selection/ehh/CHR/${CHR}.map \
      -o ${DUMP}/selection/ehh/results/D-${POP1}-${POP2}-${CHR}
done





# ============================================================================= 
# SelScan post-processing
# ============================================================================= 
OUT=${DUMP}/selection/ehh/results
prefix="D-JFM-OTH-"
suffix=".xpehh.out"
NCBI=('NC_007070.3' 'NC_007071.3' 'NC_007072.3' \
'NC_007073.3' 'NC_007074.3' 'NC_007075.3' 'NC_007076.3' \
'NC_007077.3' 'NC_007078.3' 'NC_007079.3' 'NC_007080.3' \
'NC_007081.3' 'NC_007082.3' 'NC_007083.3' 'NC_007084.3' \
'NC_007085.3')
ENSEMBL=('1' '2' '3' '4' '5' '6' '7' '8' '9' '10' '11' '12' '13' '14' '15' '16')

# Insert chromosome column at start of each file
x=0
for CHR in ${NCBI[@]}
do
  FILE=${OUT}/${prefix}${CHR}${suffix}
  cut -f2- ${FILE} > ${OUT}/test
#  sed -i '1s/^/chr\tpos\t/' ${OUT}/test
  sed "1 ! s/^/${ENSEMBL[${x}]}\t/" ${OUT}/test > ${FILE}
  x=$(($x+1))
done
# Create new field header
printf "chr\tpos\tgpos\tp1\tihh1\tp2\tihh2\txpehh\n" > ${OUT}/test
# Remove header from all out files
sed -i 1d ${OUT}/*.out
# Remove MT chromosomes
rm ${OUT}/*NC_001566*
# Merge all results together
cat ${OUT}/test ${OUT}/*.out > ${OUT}/${prefix}all${suffix}
# Clean up
rm test







