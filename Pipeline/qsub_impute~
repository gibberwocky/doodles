#!/bin/bash
# IEKNGHER1ujm

# Takes ~ 9 hrs per population (30 samples) to genotype (4.2M SNPs) and impute

# INPUTS
# (1) tab-delimited file containing one row per sample:
#	pop_id	path_vcf_file	path_bam_file
# (2) path to output results to
# (3) prefix to name the final merged output

# OUTPUTS
# (1) vcf.gz of merged populations that have been imputed
# (2) uncalled sites per population
# (3) called preimputed sites per population
# (4) imputed sites per population
# (5) log from BEAGLE

# NOTES
# To identify % imputed will need to get call rate of sample before imputation
# then compare this to call rate of sample post-imputation

# Working directory
DUMP="/home/dwragg/work/Analysis"
PIPE="/home/dwragg/work/Pipeline"


# ==============================================================================
# Population 1
# ==============================================================================
POP1=('JFM1_ATCACG_L001' 'JFM2_CGATGT_L001' 'JFM3_TTAGGC_L001' 'JFM4_TGACCA_L001' 'JFM5_ACAGTG_L001' 'JFM6_GCCAAT_L001' 'JFM7_CAGATC_L001' 'JFM8' 'JFM9_GATCAG_L001'
'JFM10_TAGCTT_L001' 'JFM11' 'JFM12_CTTGTA_L001' 'JFM13_AGTCAA_L001' 'JFM14_AGTTCC_L001' 'JFM15_ATGTCA_L001' 'JFM16_CCGTCC_L001' 'JFM17_GTCCGC_L001' 'JFM18_GTGAAA_L001' 'JFM19_GTGGCC_L001' 'JFM20_GTTTCG_L001' 'JFM21_ATCACG_L004' 'JFM22_CGATGT_L004' 'JFM23_TTAGGC_L004' 'JFM24_TGACCA_L004' 'JFM25_ACAGTG_L004' 'JFM26_GCCAAT_L004' 'JFM28_CAGATC_L004' 'JFM29_ACTTGA_L004' 'JFM31_GATCAG_L004' 'JFM33_TAGCTT_L004')
mkdir -p ${DUMP}/vcfs/pop1
mkdir -p ${DUMP}/bams/pop1
for ID in ${POP1[@]}
do
  ln -fs /save/seqapipop/Data/${ID}/vcfs/${ID}_clean.vcf.gz \
    ${DUMP}/vcfs/pop1/${ID}_clean.vcf.gz
  tabix -p vcf ${DUMP}/vcfs/pop1/${ID}_clean.vcf.gz
  ln -fs /save/seqapipop/Data/${ID}/${ID}_bootstrap.bam \
    ${DUMP}/bams/pop1/${ID}_bootstrap.bam
  ln -fs /save/seqapipop/Data/${ID}/${ID}_bootstrap.bam.bai \
    ${DUMP}/bams/pop1/${ID}_bootstrap.bam.bai
done
ID="1"
POP1_vcfs=(${DUMP}/vcfs/pop1/*.gz)
POP1_bams=(${DUMP}/bams/pop1/*.bam)
POP1_id=$(for i in ${POP1_vcfs[@]}; do printf "%0.s${ID}\n"; done)


# ==============================================================================
# Population 2
# ==============================================================================
POP2=('FL1_AGTCAA_L004' 'FL2_AGTTCC_L004' 'FL3_ATGTCA_L004' 'FL7_CCGTCC_L004' 'FL8_GTTTCG_L007' 'FL9_GTCCGC_L004' 'FL11_GTGAAA_L004' 'FL12_CGTACG_L007' 'FL13_GTGGCC_L004' 'FL15_GTTTCG_L004' 'NM1_ATCACG_L007' 'NM2_CTTGTA_L004' 'NM3_CGATGT_L007' 'NM4_TTAGGC_L007' 'NM5_GGCTAC_L004' 'NM6_TGACCA_L007' 'NM7_ACAGTG_L007' 'NM8_GCCAAT_L007' 'NM9_CAGATC_L007' 'NM21_ACTTGA_L007' 'NM25_GATCAG_L007' 'NM26_TAGCTT_L007' 'NM28_GGCTAC_L007' 'NM29_CTTGTA_L007'  'PM1_AGTCAA_L007' 'XC1_AGTTCC_L007' 'XC3_ATGTCA_L007' 'XC4_CCGTCC_L007' 'XC5_GTCCGC_L007' 'XC9_GTGAAA_L007')
mkdir -p ${DUMP}/vcfs/pop2
mkdir -p ${DUMP}/bams/pop2
for ID in ${POP2[@]}
do
  ln -fs /save/seqapipop/Data/${ID}/vcfs/${ID}_clean.vcf.gz \
    ${DUMP}/vcfs/pop2/${ID}_clean.vcf.gz
  tabix -p vcf ${DUMP}/vcfs/pop2/${ID}_clean.vcf.gz
  ln -fs /save/seqapipop/Data/${ID}/${ID}_bootstrap.bam \
    ${DUMP}/bams/pop2/${ID}_bootstrap.bam
  ln -fs /save/seqapipop/Data/${ID}/${ID}_bootstrap.bam.bai \
    ${DUMP}/bams/pop2/${ID}_bootstrap.bam.bai
done
ID="2"
POP2_vcfs=(${DUMP}/vcfs/pop2/*.gz)
POP2_bams=(${DUMP}/bams/pop2/*.bam)
POP2_id=$(for i in ${POP2_vcfs[@]}; do printf "%0.s${ID}\n"; done)


# ==============================================================================
# Merge population details and write to file
# ==============================================================================
VCFS=( ${POP1_vcfs[@]} ${POP2_vcfs[@]} )
BAMS=( ${POP1_bams[@]} ${POP2_bams[@]} )
POPS=( ${POP1_id[@]} ${POP2_id[@]} )
# Write table to file
FILE=${DUMP}/samples
for ((i=0;i<${#POPS[@]};i++));
do
  if [[ $i = 0 ]]
    then printf "${POPS[$i]}\t${VCFS[$i]}\t${BAMS[$i]}\n" > "${FILE}"
  fi
  if [[ $i > 0 ]]
    then printf "${POPS[$i]}\t${VCFS[$i]}\t${BAMS[$i]}\n" >> "${FILE}"
  fi
done

# ==============================================================================
# Impute missing genotypes and merge to single vcf
# ==============================================================================
qsub -q unlimitq -l mem=4G -l h_vmem=48G -pe parallel_smp 4 \
    -o ${DUMP}/logs \
    -e ${DUMP}/logs \
    ${PIPE}/impute.sh -i ${FILE} -o ${DUMP}/vcfs -n EurBee 



# RUNNING AGAIN BECAUSE THE OUTPUT FROM POP1 WAS MISSING JFM9






